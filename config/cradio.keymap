/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define SYM 1
#define EXT 2
#define FUN 3
#define NUM 4
#define SETTINGS 5

&sk {
    ignore-modifiers;
};

/ {
    combos {
        compatible = "zmk,combos";

        // internal-left & external-right thumb keys
        combo_num {
            timeout-ms = <200>;
            key-positions = <31 33>;
            bindings = <&mo NUM>;
        };

        // both left thumb keys
        combo_settings {
            timeout-ms = <300>;
            key-positions = <30 31>;
            bindings = <&mo SETTINGS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp Q &kp W &kp E &kp R   &kp T                   &kp Y     &kp U   &kp I &kp O &kp P
                &kp A &kp S &kp D &kp F   &kp G                   &kp H     &kp J   &kp K &kp L &none
                &kp Z &kp X &kp C &kp V   &kp B                   &kp N     &kp M   &none &none &none
                                  &mo EXT &mt LSHIFT SPACE        &kp SPACE &sl SYM
            >;
        };

        sym_layer {
            bindings = <
                &kp PRCNT &kp PIPE &kp AMPS &kp HASH &kp DLLR        &kp PLUS  &kp SEMI  &kp COLON &kp AT    &kp UNDER
                &kp LT    &kp FSLH &kp LPAR &kp LBRC &kp LBKT        &kp MINUS &kp DOT   &kp SQT   &kp QMARK &kp STAR
                &kp GT    &kp BSLH &kp RPAR &kp RBRC &kp RBKT        &kp EQUAL &kp COMMA &kp DQT   &kp EXCL  &kp FSLH
                                            &mo FUN  &mo NUM         &trans    &trans
            >;
        };

        ext_layer {
            bindings = <
                &kp ESC   &trans    &trans     &trans    &trans           &kp PG_UP    &kp HOME &kp UP   &kp END   &kp CAPS
                &sk LALT  &sk LGUI  &sk LSHIFT &sk LCTRL &kp RALT         &kp PG_DN    &kp LEFT &kp DOWN &kp RIGHT &kp DEL
                &kp LG(Z) &kp LG(X) &kp LG(C)  &kp TAB   &kp LG(V)        &kp LG(BSPC) &kp BSPC &none    &none     &none
                                               &trans    &kp LCTRL        &kp ENTER    &mo FUN
            >;
        };

        fun_layer {
            bindings = <
                &kp K_MUTE &kp C_VOL_DN &kp C_VOL_UP &kp C_BRI_DN &kp C_BRI_UP        &kp F12 &kp F7 &kp F8 &kp F9 &none
                &sk LALT   &sk LGUI     &sk LSHIFT   &sk LCTRL    &kp RALT            &kp F11 &kp F4 &kp F5 &kp F6 &none
                &none      &none        &none        &none        &none               &kp F10 &kp F1 &kp F2 &kp F3 &none
                                                     &none        &none               &none   &none
            >;
        };

        num_layer {
            bindings = <
                &kp GRAVE &kp PIPE &kp AMPS &kp HASH &kp DLLR        &kp PLUS  &kp N7 &kp N8 &kp N9 &kp N0
                &kp CARET &kp FSLH &kp LPAR &kp LBRC &kp LBKT        &kp MINUS &kp N4 &kp N5 &kp N6 &kp STAR
                &kp TILDE &kp BSLH &kp RPAR &kp RBRC &kp RBKT        &kp EQUAL &kp N1 &kp N2 &kp N3 &kp FSLH
                                            &trans   &trans          &trans    &trans
            >;
        };

        settings_layer {
            bindings = <
                &bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3         &none &none &none &none &none
                &none       &none        &none        &none        &none                &none &none &none &none &none
                &bootloader &none        &none        &none        &none                &none &none &none &none &bootloader
                                                      &none        &none                &none &none
            >;
        };

    };
};
